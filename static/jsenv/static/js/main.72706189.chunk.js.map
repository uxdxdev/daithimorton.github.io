{"version":3,"sources":["bundler/index.ts","components/code-editor.tsx","components/preview.tsx","bundler/plugins/fetch-plugin.ts","bundler/plugins/unpkg-path-plugin.ts","components/resizable.tsx","components/code-cell.tsx","index.tsx"],"names":["service","CodeEditor","onChange","initialValue","useState","shareButtonLabel","setShareButtonLabel","editorRef","useRef","className","onClick","unformatted","current","getModel","getValue","formatted","prettier","format","parser","plugins","useTabs","semi","singleQuote","replace","setValue","navigator","clipboard","writeText","window","location","href","setTimeout","editorDidMount","monacoEditor","onDidChangeModelContent","updateOptions","tabSize","Highlighter","monaco","codeShift","highLightOnDidChangeModelContent","undefined","value","theme","language","height","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","html","Preview","code","err","iframe","useEffect","srcdoc","contentWindow","postMessage","title","ref","sandbox","srcDoc","fileCache","localForage","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","loader","contents","args","getItem","path","cachedResult","axios","get","data","request","escaped","result","resolveDir","URL","responseURL","pathname","setItem","bundle","rawCode","esbuild","worker","wasmURL","entryPoints","write","onResolve","namespace","define","global","outputFiles","text","Error","message","Resizable","children","innerWidth","setInnerWidth","width","setWidth","timer","listener","clearTimeout","addEventListener","removeEventListener","resizableProps","minConstraints","Infinity","maxConstraints","resizeHandles","onResizeStop","event","size","REACT_APP_INIT","CodeCell","setCode","setErr","input","setInput","setInitialValue","history","replaceState","btoa","output","codeFromUrlParamData","search","split","decodedCode","atob","id","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.72706189.chunk.js","sourcesContent":["import * as esbuild from 'esbuild-wasm';\r\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\r\nimport { fetchPlugin } from './plugins/fetch-plugin';\r\n\r\nlet service: esbuild.Service;\r\nconst bundle = async (rawCode: string) => {\r\n  if (!service) {\r\n    service = await esbuild.startService({\r\n      worker: true,\r\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\r\n    });\r\n  }\r\n\r\n  try {\r\n    const result = await service.build({\r\n      entryPoints: ['index.js'],\r\n      bundle: true,\r\n      write: false,\r\n      plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\r\n      define: {\r\n        'process.env.NODE_ENV': '\"production\"',\r\n        global: 'window',\r\n      },\r\n    });\r\n\r\n    return {\r\n      code: result.outputFiles[0].text,\r\n      err: '',\r\n    };\r\n  } catch (err: unknown) {\r\n    if (err instanceof Error) {\r\n      return {\r\n        code: '',\r\n        err: err.message,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default bundle;\r\n","import './code-editor.css';\r\nimport './syntax.css';\r\nimport { useRef, useState } from 'react';\r\nimport MonacoEditor, { EditorDidMount } from '@monaco-editor/react';\r\nimport prettier from 'prettier';\r\nimport parser from 'prettier/parser-babel';\r\nimport codeShift from 'jscodeshift';\r\nimport Highlighter from 'monaco-jsx-highlighter';\r\n\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChange(value: string): void;\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\r\n  const [shareButtonLabel, setShareButtonLabel] = useState('Share');\r\n  const editorRef = useRef<any>();\r\n\r\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\r\n    editorRef.current = monacoEditor;\r\n    monacoEditor.onDidChangeModelContent(() => {\r\n      onChange(getValue());\r\n    });\r\n\r\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 });\r\n\r\n    const highlighter = new Highlighter(\r\n      // @ts-ignore\r\n      window.monaco,\r\n      codeShift,\r\n      monacoEditor\r\n    );\r\n    highlighter.highLightOnDidChangeModelContent(\r\n      () => {},\r\n      () => {},\r\n      undefined,\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  const onFormatClick = () => {\r\n    // get current value from editor\r\n    const unformatted = editorRef.current.getModel().getValue();\r\n\r\n    // format that value\r\n    const formatted = prettier\r\n      .format(unformatted, {\r\n        parser: 'babel',\r\n        plugins: [parser],\r\n        useTabs: false,\r\n        semi: true,\r\n        singleQuote: true,\r\n      })\r\n      .replace(/\\n$/, '');\r\n\r\n    // set the formatted value back in the editor\r\n    editorRef.current.setValue(formatted);\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <button\r\n        className=\"button button-format is-primary is-small\"\r\n        onClick={onFormatClick}\r\n      >\r\n        Format\r\n      </button>\r\n      <button\r\n        className=\"button button-share is-primary is-small\"\r\n        onClick={() => {\r\n          navigator.clipboard.writeText(window.location.href);\r\n          setShareButtonLabel('Copied!');\r\n          setTimeout(() => {\r\n            setShareButtonLabel('Share');\r\n          }, 1000);\r\n        }}\r\n      >\r\n        {shareButtonLabel}\r\n      </button>\r\n      <MonacoEditor\r\n        editorDidMount={onEditorDidMount}\r\n        value={initialValue}\r\n        theme=\"dark\"\r\n        language=\"javascript\"\r\n        height=\"100%\"\r\n        options={{\r\n          wordWrap: 'on',\r\n          minimap: { enabled: false },\r\n          showUnused: false,\r\n          folding: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 16,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","import './preview.css';\r\nimport { useRef, useEffect } from 'react';\r\n\r\ninterface PreviewProps {\r\n  code: string;\r\n  err: string;\r\n}\r\n\r\nconst html = `\r\n    <html>\r\n      <head></head>\r\n      <body>\r\n        <div id=\"root\"></div>\r\n        <script>\r\n          const handleError = (err) => {\r\n            const root = document.querySelector('#root');\r\n            root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\r\n            console.error(err);\r\n          };\r\n\r\n          window.addEventListener('error', (event) => {\r\n            event.preventDefault();\r\n            handleError(event.error);\r\n          });\r\n\r\n          window.addEventListener('message', (event) => {\r\n            try {\r\n              eval(event.data);\r\n            } catch (err) {\r\n              handleError(err);\r\n            }\r\n          }, false);\r\n        </script>\r\n      </body>\r\n    </html>\r\n  `;\r\n\r\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\r\n  const iframe = useRef<any>();\r\n\r\n  useEffect(() => {\r\n    iframe.current.srcdoc = html;\r\n    setTimeout(() => {\r\n      iframe.current.contentWindow.postMessage(code, '*');\r\n    }, 50);\r\n  }, [code]);\r\n\r\n  return (\r\n    <div className=\"preview-wrapper\">\r\n      <iframe\r\n        title=\"preview\"\r\n        ref={iframe}\r\n        sandbox=\"allow-scripts\"\r\n        srcDoc={html}\r\n      />\r\n      {err && <div className=\"preview-error\">{err}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import * as esbuild from 'esbuild-wasm';\r\nimport axios from 'axios';\r\nimport localForage from 'localforage';\r\n\r\nconst fileCache = localForage.createInstance({\r\n  name: 'filecache',\r\n});\r\n\r\nexport const fetchPlugin = (inputCode: string) => {\r\n  return {\r\n    name: 'fetch-plugin',\r\n    setup(build: esbuild.PluginBuild) {\r\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          loader: 'jsx',\r\n          contents: inputCode,\r\n        };\r\n      });\r\n\r\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\r\n          args.path\r\n        );\r\n\r\n        if (cachedResult) {\r\n          return cachedResult;\r\n        }\r\n      });\r\n\r\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        const escaped = data\r\n          .replace(/\\n/g, '')\r\n          .replace(/\"/g, '\\\\\"')\r\n          .replace(/'/g, \"\\\\'\");\r\n        const contents = `\r\n          const style = document.createElement('style');\r\n          style.innerText = '${escaped}';\r\n          document.head.appendChild(style);\r\n        `;\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: 'jsx',\r\n          contents,\r\n          resolveDir: new URL('./', request.responseURL).pathname,\r\n        };\r\n        await fileCache.setItem(args.path, result);\r\n\r\n        return result;\r\n      });\r\n\r\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\r\n        const { data, request } = await axios.get(args.path);\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: 'jsx',\r\n          contents: data,\r\n          resolveDir: new URL('./', request.responseURL).pathname,\r\n        };\r\n        await fileCache.setItem(args.path, result);\r\n\r\n        return result;\r\n      });\r\n    },\r\n  };\r\n};\r\n","import * as esbuild from 'esbuild-wasm';\r\n\r\nexport const unpkgPathPlugin = () => {\r\n  return {\r\n    name: 'unpkg-path-plugin',\r\n    setup(build: esbuild.PluginBuild) {\r\n      // Handle root entry file of 'index.js'\r\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\r\n        return { path: 'index.js', namespace: 'a' };\r\n      });\r\n\r\n      // Handle relative paths in a module\r\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\r\n        return {\r\n          namespace: 'a',\r\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/')\r\n            .href,\r\n        };\r\n      });\r\n\r\n      // Handle main file of a module\r\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\r\n        return {\r\n          namespace: 'a',\r\n          path: `https://unpkg.com/${args.path}`,\r\n        };\r\n      });\r\n    },\r\n  };\r\n};\r\n","import './resizable.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { ResizableBox, ResizableBoxProps } from 'react-resizable';\r\n\r\nconst Resizable: React.FC = ({ children }) => {\r\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\r\n  const [width, setWidth] = useState(window.innerWidth * 0.75);\r\n\r\n  useEffect(() => {\r\n    let timer: any;\r\n    const listener = () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n      timer = setTimeout(() => {\r\n        setInnerWidth(window.innerWidth);\r\n        if (window.innerWidth * 0.75 < width) {\r\n          setWidth(window.innerWidth * 0.75);\r\n        }\r\n      }, 100);\r\n    };\r\n    window.addEventListener('resize', listener);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', listener);\r\n    };\r\n  }, [width]);\r\n\r\n  const resizableProps: ResizableBoxProps = {\r\n    className: 'resize-horizontal',\r\n    minConstraints: [innerWidth * 0.2, Infinity],\r\n    maxConstraints: [innerWidth * 0.75, Infinity],\r\n    height: Infinity,\r\n    width,\r\n    resizeHandles: ['e'],\r\n    onResizeStop: (event, data) => {\r\n      setWidth(data.size.width);\r\n    },\r\n  };\r\n\r\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\r\n};\r\n\r\nexport default Resizable;\r\n","import { useState, useEffect } from 'react';\r\nimport CodeEditor from './code-editor';\r\nimport Preview from './preview';\r\nimport bundle from '../bundler';\r\nimport Resizable from './resizable';\r\nimport './code-cell.css';\r\n\r\nconst REACT_APP_INIT = `import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// fonts\r\nimport WebFont from 'webfontloader';\r\n// css-in-js\r\nimport styled, { ThemeProvider } from 'styled-components';\r\n// Radix https://www.radix-ui.com/\r\nimport { blue, green } from '@radix-ui/colors';\r\nimport { FaceIcon } from '@radix-ui/react-icons';\r\n\r\n// styled-components global styles don't work in the preview iframe\r\n// so you need to set styles on the body directly\r\ndocument.body.style = \\`margin: 0; font-family: 'Atkinson Hyperlegible';\\`;\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Atkinson Hyperlegible'],\r\n  },\r\n});\r\n\r\nconst theme = {\r\n  colors: {\r\n    ...blue,\r\n    ...green,\r\n  },\r\n};\r\n\r\nconst Title = styled.h1\\`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n\\`;\r\n\r\nconst Wrapper = styled.section\\`  \r\n  padding: 4em;\r\n  background: papayawhip;\r\n\\`;\r\n\r\nconst Counter = styled.div\\`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\\`;\r\n\r\nconst CountValue = styled.div\\`\r\n  font-size: 2em;\r\n\\`;\r\n\r\nconst Button = styled.button\\`\r\n  font-family: inherit;\r\n  background-color: \\${(props) => props.theme.colors.blue4};\r\n  color: \\${(props) => props.theme.colors.blue11};\r\n  border-color: \\${(props) => props.theme.colors.blue7};\r\n  &:hover {\r\n    background-color: \\${(props) => props.theme.colors.green5};\r\n    border-color: \\${(props) => props.theme.colors.green8};\r\n  }\r\n\\`;\r\n\r\nconst useCounter = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  function increment() {\r\n    setCount(count + 1);\r\n  }\r\n  return {\r\n    count,\r\n    increment,\r\n  };\r\n};\r\n\r\nconst Count = () => {\r\n  const { count, increment } = useCounter();\r\n  return (\r\n    <Counter>\r\n      <CountValue>{count}</CountValue>\r\n      <Button onClick={() => increment()}>Click me</Button>\r\n    </Counter>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Wrapper>\r\n        <Title>\r\n          Hello World!\r\n          <FaceIcon />\r\n        </Title>\r\n        <Count />\r\n      </Wrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));`;\r\n\r\nconst CodeCell = () => {\r\n  const [code, setCode] = useState('');\r\n  const [err, setErr] = useState('');\r\n  const [input, setInput] = useState('');\r\n  const [initialValue, setInitialValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(async () => {\r\n      window.history.replaceState(null, '', `?data=${btoa(input)}`);\r\n      const output = await bundle(input);\r\n      if (output) {\r\n        setCode(output.code);\r\n        setErr(output.err);\r\n      }\r\n    }, 2000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [input]);\r\n\r\n  useEffect(() => {\r\n    const codeFromUrlParamData = window.location.search.split('data=')[1];\r\n    if (codeFromUrlParamData) {\r\n      const decodedCode = atob(codeFromUrlParamData);\r\n      setInitialValue(decodedCode);\r\n      setInput(decodedCode);\r\n    } else {\r\n      setInitialValue(REACT_APP_INIT);\r\n      setInput(REACT_APP_INIT);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"code-cell\">\r\n      <Resizable>\r\n        <CodeEditor\r\n          initialValue={initialValue}\r\n          onChange={(value) => setInput(value)}\r\n        />\r\n      </Resizable>\r\n      <Preview code={code} err={err} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeCell;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CodeCell from './components/code-cell';\r\nimport 'bulmaswatch/superhero/bulmaswatch.min.css';\r\nimport './styles.css';\r\n\r\nconst App = () => {\r\n  return <CodeCell />;\r\n};\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}