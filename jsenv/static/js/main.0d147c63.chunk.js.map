{"version":3,"sources":["bundler/index.ts","components/code-editor.tsx","components/preview.tsx","bundler/plugins/fetch-plugin.ts","bundler/plugins/unpkg-path-plugin.ts","components/resizable.tsx","components/code-cell.tsx","index.tsx"],"names":["service","CodeEditor","onChange","initialValue","useState","shareButtonLabel","setShareButtonLabel","editorRef","useRef","className","onClick","unformatted","current","getModel","getValue","formatted","prettier","format","parser","plugins","useTabs","semi","singleQuote","replace","setValue","navigator","clipboard","writeText","window","location","href","setTimeout","editorDidMount","monacoEditor","onDidChangeModelContent","updateOptions","tabSize","Highlighter","monaco","codeShift","highLightOnDidChangeModelContent","undefined","value","theme","language","height","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","html","Preview","code","err","iframe","useEffect","srcdoc","contentWindow","postMessage","title","ref","sandbox","srcDoc","fileCache","localForage","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","loader","contents","args","a","getItem","path","cachedResult","axios","get","data","request","escaped","result","resolveDir","URL","responseURL","pathname","setItem","bundle","rawCode","esbuild","worker","wasmURL","entryPoints","write","onResolve","namespace","define","global","outputFiles","text","message","Resizable","children","innerWidth","setInnerWidth","width","setWidth","timer","listener","clearTimeout","addEventListener","removeEventListener","resizableProps","minConstraints","Infinity","maxConstraints","resizeHandles","onResizeStop","event","size","REACT_APP_INIT","CodeCell","setCode","setErr","input","setInput","setInitialValue","history","replaceState","btoa","output","codeFromUrlParamData","search","split","decodedCode","atob","id","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0d147c63.chunk.js","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nimport { fetchPlugin } from './plugins/fetch-plugin';\n\nlet service: esbuild.Service;\nconst bundle = async (rawCode: string) => {\n  if (!service) {\n    service = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\n    });\n  }\n\n  try {\n    const result = await service.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\n      define: {\n        'process.env.NODE_ENV': '\"production\"',\n        global: 'window',\n      },\n    });\n\n    return {\n      code: result.outputFiles[0].text,\n      err: '',\n    };\n  } catch (err) {\n    return {\n      code: '',\n      err: err.message,\n    };\n  }\n};\n\nexport default bundle;\n","import './code-editor.css';\nimport './syntax.css';\nimport { useRef, useState } from 'react';\nimport MonacoEditor, { EditorDidMount } from '@monaco-editor/react';\nimport prettier from 'prettier';\nimport parser from 'prettier/parser-babel';\nimport codeShift from 'jscodeshift';\nimport Highlighter from 'monaco-jsx-highlighter';\n\ninterface CodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void;\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\n  const [shareButtonLabel, setShareButtonLabel] = useState('Share');\n  const editorRef = useRef<any>();\n\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\n    editorRef.current = monacoEditor;\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 });\n\n    const highlighter = new Highlighter(\n      // @ts-ignore\n      window.monaco,\n      codeShift,\n      monacoEditor\n    );\n    highlighter.highLightOnDidChangeModelContent(\n      () => {},\n      () => {},\n      undefined,\n      () => {}\n    );\n  };\n\n  const onFormatClick = () => {\n    // get current value from editor\n    const unformatted = editorRef.current.getModel().getValue();\n\n    // format that value\n    const formatted = prettier\n      .format(unformatted, {\n        parser: 'babel',\n        plugins: [parser],\n        useTabs: false,\n        semi: true,\n        singleQuote: true,\n      })\n      .replace(/\\n$/, '');\n\n    // set the formatted value back in the editor\n    editorRef.current.setValue(formatted);\n  };\n\n  return (\n    <div className=\"editor-wrapper\">\n      <button className=\"button button-format is-primary is-small\" onClick={onFormatClick}>\n        Format\n      </button>\n      <button\n        className=\"button button-share is-primary is-small\"\n        onClick={() => {\n          navigator.clipboard.writeText(window.location.href);\n          setShareButtonLabel('Copied!');\n          setTimeout(() => {\n            setShareButtonLabel('Share');\n          }, 1000);\n        }}\n      >\n        {shareButtonLabel}\n      </button>\n      <MonacoEditor\n        editorDidMount={onEditorDidMount}\n        value={initialValue}\n        theme=\"dark\"\n        language=\"javascript\"\n        height=\"100%\"\n        options={{\n          wordWrap: 'on',\n          minimap: { enabled: false },\n          showUnused: false,\n          folding: false,\n          lineNumbersMinChars: 3,\n          fontSize: 16,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditor;\n","import './preview.css';\nimport { useRef, useEffect } from 'react';\n\ninterface PreviewProps {\n  code: string;\n  err: string;\n}\n\nconst html = `\n    <html>\n      <head>\n        <style>html { background-color: white; }</style>\n      </head>\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          const handleError = (err) => {\n            const root = document.querySelector('#root');\n            root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n            console.error(err);\n          };\n\n          window.addEventListener('error', (event) => {\n            event.preventDefault();\n            handleError(event.error);\n          });\n\n          window.addEventListener('message', (event) => {\n            try {\n              eval(event.data);\n            } catch (err) {\n              handleError(err);\n            }\n          }, false);\n        </script>\n      </body>\n    </html>\n  `;\n\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\n  const iframe = useRef<any>();\n\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, '*');\n    }, 50);\n  }, [code]);\n\n  return (\n    <div className=\"preview-wrapper\">\n      <iframe\n        title=\"preview\"\n        ref={iframe}\n        sandbox=\"allow-scripts\"\n        srcDoc={html}\n      />\n      {err && <div className=\"preview-error\">{err}</div>}\n    </div>\n  );\n};\n\nexport default Preview;\n","import * as esbuild from 'esbuild-wasm';\nimport axios from 'axios';\nimport localForage from 'localforage';\n\nconst fileCache = localForage.createInstance({\n  name: 'filecache',\n});\n\nexport const fetchPlugin = (inputCode: string) => {\n  return {\n    name: 'fetch-plugin',\n    setup(build: esbuild.PluginBuild) {\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\n        return {\n          loader: 'jsx',\n          contents: inputCode,\n        };\n      });\n\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\n          args.path\n        );\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n      });\n\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\n        const { data, request } = await axios.get(args.path);\n        const escaped = data\n          .replace(/\\n/g, '')\n          .replace(/\"/g, '\\\\\"')\n          .replace(/'/g, \"\\\\'\");\n        const contents = `\n          const style = document.createElement('style');\n          style.innerText = '${escaped}';\n          document.head.appendChild(style);\n        `;\n\n        const result: esbuild.OnLoadResult = {\n          loader: 'jsx',\n          contents,\n          resolveDir: new URL('./', request.responseURL).pathname,\n        };\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        const { data, request } = await axios.get(args.path);\n\n        const result: esbuild.OnLoadResult = {\n          loader: 'jsx',\n          contents: data,\n          resolveDir: new URL('./', request.responseURL).pathname,\n        };\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n    },\n  };\n};\n","import * as esbuild from 'esbuild-wasm';\n\nexport const unpkgPathPlugin = () => {\n  return {\n    name: 'unpkg-path-plugin',\n    setup(build: esbuild.PluginBuild) {\n      // Handle root entry file of 'index.js'\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\n        return { path: 'index.js', namespace: 'a' };\n      });\n\n      // Handle relative paths in a module\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\n        return {\n          namespace: 'a',\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/')\n            .href,\n        };\n      });\n\n      // Handle main file of a module\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`,\n        };\n      });\n    },\n  };\n};\n","import './resizable.css';\nimport { useEffect, useState } from 'react';\nimport { ResizableBox, ResizableBoxProps } from 'react-resizable';\n\nconst Resizable: React.FC = ({ children }) => {\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [width, setWidth] = useState(window.innerWidth * 0.75);\n\n  useEffect(() => {\n    let timer: any;\n    const listener = () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        setInnerWidth(window.innerWidth);\n        if (window.innerWidth * 0.75 < width) {\n          setWidth(window.innerWidth * 0.75);\n        }\n      }, 100);\n    };\n    window.addEventListener('resize', listener);\n\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  }, [width]);\n\n  const resizableProps: ResizableBoxProps = {\n    className: 'resize-horizontal',\n    minConstraints: [innerWidth * 0.2, Infinity],\n    maxConstraints: [innerWidth * 0.75, Infinity],\n    height: Infinity,\n    width,\n    resizeHandles: ['e'],\n    onResizeStop: (event, data) => {\n      setWidth(data.size.width);\n    },\n  };\n\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n","import { useState, useEffect } from 'react';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\nimport bundle from '../bundler';\nimport Resizable from './resizable';\nimport './code-cell.css';\n\nconst REACT_APP_INIT = `import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = ()=>{\n  return <div>This is s ReactJS app</div>;\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));`;\n\nconst CodeCell = () => {\n  const [code, setCode] = useState('');\n  const [err, setErr] = useState('');\n  const [input, setInput] = useState('');\n  const [initialValue, setInitialValue] = useState('');\n\n  useEffect(() => {\n    const timer = setTimeout(async () => {\n      window.history.replaceState(null, '', `?data=${btoa(input)}`);\n      const output = await bundle(input);\n      setCode(output.code);\n      setErr(output.err);\n    }, 750);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [input]);\n\n  useEffect(() => {\n    const codeFromUrlParamData = window.location.search.split('data=')[1];\n    if (codeFromUrlParamData) {\n      const decodedCode = atob(codeFromUrlParamData);\n      setInitialValue(decodedCode);\n      setInput(decodedCode);\n    } else {\n      setInitialValue(REACT_APP_INIT);\n      setInput(REACT_APP_INIT);\n    }\n  }, []);\n\n  return (\n    <div id=\"code-cell\">\n      <Resizable>\n        <CodeEditor initialValue={initialValue} onChange={(value) => setInput(value)} />\n      </Resizable>\n      <Preview code={code} err={err} />\n    </div>\n  );\n};\n\nexport default CodeCell;\n","import 'bulmaswatch/superhero/bulmaswatch.min.css';\nimport ReactDOM from 'react-dom';\nimport CodeCell from './components/code-cell';\nimport './styles.css';\n\nconst App = () => {\n  return <CodeCell />;\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}